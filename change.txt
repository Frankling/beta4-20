/**
 * Created by DELL on 2016/3/4.
 */
three.js
=======================================three.js
THREE.LightObject  = function () {

    THREE.Object3D.call( this );

    this.type = 'LightObject';

};
THREE.LightObject.prototype = Object.create( THREE.Object3D.prototype );
THREE.LightObject.prototype.constructor = THREE.LightObject;


!==================================================three.js
//THREE.Euler.prototype
sub:function(v){
    this.x-= v.x;
    this.y-= v.y;
    this.z-= v.z;
    return this;
},
add:function(v){
    this.x+= v.x;
    this.y+= v.y;
    this.z+= v.z;
    return this;
},

!===================================================three.js
//THREE.Vector3.prototype
diviply: function ( v, w ) {

    if ( w !== undefined ) {

        console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
        return this.multiplyVectors( v, w );

    }

    this.x /= v.x;
    this.y /= v.y;
    this.z /= v.z;

    return this;

},
!================================================three.js
THREE.DirectionalLightHelper = function ( light, size ) {

    THREE.Object3D.call( this );

    this.light = light;
    this.light.updateMatrixWorld();

    this.matrix = light.matrix;

================================================three.js
parseObject: function () {
.....
case 'LightObject':

	object = new THREE.LightObject();

	break;
================================================three.js
 three.js
      1:THREE.XHRLoader.prototype = {

        	constructor: THREE.XHRLoader,

        	load: function ( url, onLoad, onProgress, onError ) {
        	....
        	var extension = url.split( '.' ).pop().toLowerCase();
            		var request = new XMLHttpRequest();
            		if(extension!="xml"){
            			request.overrideMimeType( 'text/plain' );
            		}
            		request.open( 'post', url, true );
            		request.addEventListener( 'load', function ( event ) {
            			var response;
            			if(extension=="xml"){

            				response = event.target.responseXML;
            				console.log(response)
            			}else{
            				response = event.target.response;
            			}
            ....
        	}



 ================================================three.js
  three.js

  	getObjectByUuid: function (uuid) {

  		return this.getObjectByProperty( 'uuid',uuid);

  	},




  	   待改：
                        envmap 为THREE.WebGLRenderTargetCube加prototype.toJSON；
                        定制化页面的物体列表，把物体列表和灯光列表的body提取出来调整高度
                        动画，碰撞,.dispatch()有不必要的重复,阻力,灯光跟踪为实时渲染